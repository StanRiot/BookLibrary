// <auto-generated />
using BookLibrary.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookLibrary.DAL.Migrations
{
    [DbContext(typeof(BookLibraryContext))]
    partial class BookLibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookLibrary.CORE.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "George R.R. Martin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 3,
                            Name = "John Ronald Reuel Tolkien"
                        });
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A Game of Thrones",
                            Year = 1996
                        },
                        new
                        {
                            Id = 2,
                            Name = "A Clash of Kings",
                            Year = 1998
                        },
                        new
                        {
                            Id = 3,
                            Name = "A Storm of Swords",
                            Year = 2000
                        },
                        new
                        {
                            Id = 4,
                            Name = "A Feast for Crows",
                            Year = 2005
                        },
                        new
                        {
                            Id = 5,
                            Name = "A Dance with Dragons",
                            Year = 2011
                        },
                        new
                        {
                            Id = 6,
                            Name = "The Philosopher's Stone",
                            Year = 1997
                        },
                        new
                        {
                            Id = 7,
                            Name = "The Chamber of Secrets",
                            Year = 1998
                        },
                        new
                        {
                            Id = 8,
                            Name = "The Prisoner of Azkaban",
                            Year = 1999
                        },
                        new
                        {
                            Id = 9,
                            Name = "The Goblet of Fire",
                            Year = 2000
                        },
                        new
                        {
                            Id = 10,
                            Name = "The Order of the Phoenix",
                            Year = 2003
                        },
                        new
                        {
                            Id = 11,
                            Name = "The Half-Blood Prince",
                            Year = 2005
                        },
                        new
                        {
                            Id = 12,
                            Name = "The Deathly Hallows",
                            Year = 2007
                        },
                        new
                        {
                            Id = 13,
                            Name = "The Hobbit or There and Back Again",
                            Year = 1937
                        },
                        new
                        {
                            Id = 14,
                            Name = "The Lord of the Rings. The Fellowship of the Ring",
                            Year = 1954
                        },
                        new
                        {
                            Id = 15,
                            Name = "The Lord of the Rings. The Two Towers",
                            Year = 1954
                        },
                        new
                        {
                            Id = 16,
                            Name = "The Lord of the Rings. The Return of the King",
                            Year = 1955
                        });
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.BooksAuthors", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BooksAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 14,
                            AuthorId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 15,
                            AuthorId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 3,
                            Id = 0
                        });
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.BooksGenres", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BooksGenres");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 1,
                            Id = 0
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 2,
                            Id = 0
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 3,
                            Id = 0
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 1,
                            Id = 0
                        });
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.BooksAuthors", b =>
                {
                    b.HasOne("BookLibrary.CORE.Models.Author", "Author")
                        .WithMany("BooksAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookLibrary.CORE.Models.Book", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookLibrary.CORE.Models.BooksGenres", b =>
                {
                    b.HasOne("BookLibrary.CORE.Models.Book", "Book")
                        .WithMany("Genres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookLibrary.CORE.Models.Genre", "Genre")
                        .WithMany("BooksGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
